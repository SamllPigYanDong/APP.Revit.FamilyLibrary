<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="./StaticStyles.xaml" />
        <ResourceDictionary Source="./DefaultStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="StComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.UseLayoutRounding" Value="True" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="{StaticResource BrSelectableItemHover}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                        Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextBlock.Foreground" Value="{DynamicResource SystemColors.GrayTextBrushKey}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ListBoxItem.IsSelected" Value="False" />
                                <Condition Property="UIElement.IsMouseOver" Value="False" />
                                <Condition Property="UIElement.IsKeyboardFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="White" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StToggleButtonComboBox" TargetType="{x:Type ToggleButton}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ButtonBase.ClickMode" Value="Press" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Name="templateRoot"
                        Background="#FFFFFFFF"
                        BorderBrush="{StaticResource BrComboboxBorder}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        ClipToBounds="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid>
                            <Border
                                Name="splitBorder"
                                Width="{DynamicResource SystemParameters.VerticalScrollBarWidthKey}"
                                Margin="0"
                                HorizontalAlignment="Right"
                                BorderBrush="White"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                                <Path
                                    Name="arrow"
                                    Margin="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="{StaticResource GeomDownArrow}"
                                    Fill="{StaticResource BrDarkText}" />
                            </Border>
                            <Border
                                Name="PART_InnerShadow"
                                Margin="-5"
                                Background="White"
                                BorderBrush="#FF000000"
                                BorderThickness="0,4,0,0"
                                Visibility="Hidden">
                                <UIElement.Effect>
                                    <DropShadowEffect BlurRadius="15" ShadowDepth="0" />
                                </UIElement.Effect>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="templateRoot" Property="Background" Value="#FFFFFFFF" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource BrComboboxBorder}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource BrComboboxHover}" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource BrComboboxBorderHover}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource BrComboboxBorderPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource BrControlsLight}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="PART_InnerShadow" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="UIElement.AllowDrop" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer
                        Name="PART_ContentHost"
                        Background="White"
                        Focusable="False"
                        HorizontalScrollBarVisibility="Hidden"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                        VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="CtComboBoxStandard" TargetType="{x:Type ComboBox}">
        <Grid
            Name="templateRoot"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource SystemParameters.VerticalScrollBarWidthKey}" />
            </Grid.ColumnDefinitions>
            <Popup
                Name="PART_Popup"
                Grid.ColumnSpan="2"
                Margin="1"
                AllowsTransparency="True"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource SystemParameters.ComboBoxPopupAnimationKey}"
                VerticalOffset="3">
                <Border
                    Name="dropDownBorder"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Background="{DynamicResource SystemColors.WindowBrushKey}"
                    BorderBrush="{StaticResource BrComboboxBorderHover}"
                    BorderThickness="1"
                    Effect="{StaticResource EffectDropShadowPortal}">
                    <ScrollViewer Name="DropDownScrollViewer" Template="{StaticResource ScrollViewer_Normal}">
                        <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas
                                Name="canvas"
                                Width="0"
                                Height="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top">
                                <Rectangle
                                    Name="opaqueRect"
                                    Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                    Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                    Fill="{Binding Background, ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter
                                Name="ItemsPresenter"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton
                Name="toggleButton"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource StToggleButtonComboBox}" />
            <ContentPresenter
                Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                IsHitTestVisible="False"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                <Setter TargetName="dropDownBorder" Property="Margin" Value="0,0,5,5" />
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="False">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemsControl.IsGrouping" Value="True" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="CtComboBoxEditable" TargetType="{x:Type ComboBox}">
        <Grid
            Name="templateRoot"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource SystemParameters.VerticalScrollBarWidthKey}" />
            </Grid.ColumnDefinitions>
            <Popup
                Name="PART_Popup"
                Grid.ColumnSpan="2"
                AllowsTransparency="True"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource SystemParameters.ComboBoxPopupAnimationKey}"
                VerticalOffset="3">
                <Border
                    Name="dropDownBorder"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Background="{DynamicResource SystemColors.WindowBrushKey}"
                    BorderBrush="{StaticResource BrComboboxBorderHover}"
                    BorderThickness="1"
                    Effect="{StaticResource EffectDropShadowPortal}">
                    <ScrollViewer Name="DropDownScrollViewer" Template="{StaticResource  ScrollViewer_Normal}">
                        <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas
                                Name="canvas"
                                Width="0"
                                Height="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top">
                                <Rectangle
                                    Name="opaqueRect"
                                    Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                    Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                    Fill="{Binding Background, ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter
                                Name="ItemsPresenter"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton
                Name="toggleButton"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource StToggleButtonComboBox}" />
            <Border
                Name="border"
                Margin="{TemplateBinding BorderThickness}"
                Background="#FFFFFFFF">
                <TextBox
                    Name="PART_EditableTextBox"
                    Margin="{TemplateBinding Padding}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource StComboBoxEditableTextBox}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
                <Setter Property="Foreground" Value="#FF000000" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                <Setter TargetName="dropDownBorder" Property="Margin" Value="0,0,5,5" />
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="False">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemsControl.IsGrouping" Value="True" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="StComboBoxStandard" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="{StaticResource BrComboboxBorder}" />
        <Setter Property="Foreground" Value="{StaticResource BrDarkText}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource CtComboBoxStandard}" />
        <Setter Property="FontFamily" Value="Resources/#Artifakt Element Light" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource StComboBoxItem}" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.UseLayoutRounding" Value="True" />
        <Style.Triggers>
            <Trigger Property="ComboBox.IsEditable" Value="True">
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="Template" Value="{StaticResource CtComboBoxEditable}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="{x:Type ComboBox}"
        BasedOn="{StaticResource StComboBoxStandard}"
        TargetType="{x:Type ComboBox}" />
</ResourceDictionary>